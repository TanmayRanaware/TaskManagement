name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7.2-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          server/package-lock.json
          web/package-lock.json

    - name: Install server dependencies
      run: |
        cd server
        npm ci

    - name: Install web dependencies
      run: |
        cd web
        npm ci

    - name: Lint server code
      run: |
        cd server
        npm run lint

    - name: Lint web code
      run: |
        cd web
        npm run lint

    - name: Type check server
      run: |
        cd server
        npm run type-check

    - name: Type check web
      run: |
        cd web
        npm run type-check

    - name: Test server
      run: |
        cd server
        npm run test:ci
      env:
        NODE_ENV: test
        MONGO_URI: mongodb://localhost:27017/taskmanagement_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret

    - name: Test web
      run: |
        cd web
        npm run test:ci

    - name: Build server
      run: |
        cd server
        npm run build

    - name: Build web
      run: |
        cd web
        npm run build

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push server image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/taskmanagement-server:latest
          ${{ secrets.DOCKER_USERNAME }}/taskmanagement-server:${{ github.sha }}
        platforms: linux/amd64,linux/arm64
    
    - name: Build and push web image
      uses: docker/build-push-action@v5
      with:
        context: ./web
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/taskmanagement-web:latest
          ${{ secrets.DOCKER_USERNAME }}/taskmanagement-web:${{ github.sha }}
        platforms: linux/amd64,linux/arm64

  deploy:
    runs-on: ubuntu-latest
    needs: [test, docker]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add deployment steps here
